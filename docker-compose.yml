services:
  odata-manager-app:
    restart: on-failure
    build: ./
    ports:
      - "8080:8080" # Only expose the application port for production
    environment:
      # - SQL_HOST
      # - SQL_USER
      # - SQL_PASSWORD
      # - SQL_CONNECTION_STR
      - SQL_CONNECTION_STR=jdbc:mongodb://mappingclient:e1p2vmbSRHADVv6s@federateddatabaseinstance0-aeucj.a.query.mongodb.net/reso?ssl=true&authSource=admin
      - SQL_HOST=mongo
      - SQL_USER=root
      - SQL_PASSWORD=root
      - SQL_DB_DRIVER
      - CERT_REPORT_FILENAME
      - ENABLE_DEBUG=false # Ensure debugging is off for production
    volumes:
      - ./build/libs:/usr/local/tomcat/webapps
    depends_on:
      - mongo

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  docker-mariadb:
    restart: always
    container_name: docker-mariadb
    image: mariadb:latest
    environment:
      MYSQL_DATABASE: reso_data_dictionary_1_7
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: "%"
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "6033:3306"
    healthcheck:
      test: '/usr/bin/mysql --user=root --password=root --execute "SHOW DATABASES;"'
      interval: 2s
      timeout: 20s
      retries: 10
